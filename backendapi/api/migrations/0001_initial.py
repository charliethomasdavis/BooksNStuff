# Generated by Django 2.2.6 on 2019-11-27 23:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Authors',
            fields=[
                ('authorid', models.AutoField(db_column='AuthorID', primary_key=True, serialize=False)),
                ('fname', models.CharField(db_column='FName', max_length=100)),
                ('lname', models.CharField(db_column='LName', max_length=100)),
                ('dob', models.DateTimeField(blank=True, db_column='DoB', null=True)),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=10, null=True)),
            ],
            options={
                'verbose_name_plural': 'Authors',
                'db_table': 'Authors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthtokenToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'authtoken_token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookCat',
            fields=[
                ('categorycode', models.IntegerField(db_column='CategoryCode', primary_key=True, serialize=False)),
                ('categorydesc', models.CharField(db_column='CategoryDesc', max_length=100)),
            ],
            options={
                'verbose_name_plural': 'BookCats',
                'db_table': 'BookCat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('isbn', models.CharField(db_column='ISBN', max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=127)),
                ('pubdate', models.DateField(db_column='PubDate')),
                ('price', models.DecimalField(db_column='Price', decimal_places=2, max_digits=13)),
                ('userreviews', models.SmallIntegerField(blank=True, db_column='UserReviews', null=True)),
            ],
            options={
                'verbose_name_plural': 'Books',
                'db_table': 'Books',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('customerid', models.AutoField(db_column='CustomerID', primary_key=True, serialize=False)),
                ('first_name', models.CharField(db_column='FName', max_length=100)),
                ('last_name', models.CharField(db_column='LName', max_length=100)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=256, null=True)),
                ('email', models.CharField(db_column='Email', max_length=100)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Customers',
                'db_table': 'Customers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('itemno', models.AutoField(db_column='ItemNo', primary_key=True, serialize=False)),
                ('itemprice', models.DecimalField(db_column='ItemPrice', decimal_places=2, max_digits=13)),
            ],
            options={
                'verbose_name_plural': 'OrderItems',
                'db_table': 'OrderItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orderid', models.AutoField(db_column='OrderID', primary_key=True, serialize=False)),
                ('orderval', models.DecimalField(db_column='OrderVal', decimal_places=2, max_digits=13)),
                ('orderdate', models.DateField(db_column='OrderDate')),
            ],
            options={
                'verbose_name_plural': 'Orders',
                'db_table': 'Orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SupplierReps',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('fname', models.CharField(db_column='FName', max_length=100)),
                ('lname', models.CharField(db_column='LName', max_length=100)),
                ('workno', models.CharField(blank=True, db_column='WorkNo', max_length=100, null=True)),
                ('cellno', models.CharField(blank=True, db_column='CellNo', max_length=100, null=True)),
                ('email', models.CharField(db_column='Email', max_length=100)),
            ],
            options={
                'verbose_name_plural': 'SupplierReps',
                'db_table': 'SupplierReps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('name', models.CharField(db_column='Name', max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'Suppliers',
                'db_table': 'Suppliers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthorBooks',
            fields=[
                ('authorid', models.ForeignKey(db_column='AuthorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.Authors')),
            ],
            options={
                'verbose_name_plural': 'AuthorBooks',
                'db_table': 'Author_Books',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthorContactDetails',
            fields=[
                ('authorid', models.ForeignKey(db_column='AuthorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.Authors')),
                ('address', models.CharField(blank=True, db_column='Address', max_length=256, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=100, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'AuthorContactDetails',
                'db_table': 'AuthorContactDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BooksBookCat',
            fields=[
                ('isbn', models.ForeignKey(db_column='ISBN', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.Books')),
            ],
            options={
                'verbose_name_plural': 'BooksBookCats',
                'db_table': 'Books_BookCat',
                'managed': False,
            },
        ),
    ]
